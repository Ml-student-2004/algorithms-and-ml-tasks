"""Алфавитный порядок отличается от лексиграфического тем, что в лексиграфическом влияние имеет регистр букв
Копирование строк в некоторых языках может быть долгим( в питоне быстро, так как был бы просто указатель ны ссылку)
Если мы  будем коопировать сами обьекты а не ссылки на них то решение будет очень долгим

РЕШЕНИЕ ПРОБЛЕМЫ: Запоминать не i-тый элемент строки, а его индекс

В питоне строка неизменяемый обьект, поэтому прибавлять к строке строку долго!! Что делать: создавать массив а после использовать функцию join
ПРИМЕР:"""

def(shortword):
  minlen = len(words[0])
  for word in words:
    if len(word)<minlen:
      minlen = len(word)
  ans = []
  for word in words:
    if len(word) == minlen:
      ans.append(word)
  return ' '.join(ans)

"""Задача с собеседования:
Дана строка. Состоит из букв A - Z. AAAZZFAAAA Нужно сделать функцию, 
которая на выходе выдает строку A3Z3FA4 - то есть заменяет множественное вхождение символа на символ и количество раз вхождения
"""

s = input()
last = s[0]
ans=[]
ans.append(last)
for i in range(len(s)):
    if s[i] != last:
        last = s[i]
        ans.append(s[i])

print(''.join(ans))
"""cначала предлагается написал программу которая просто уберет все повторения
   СПИСОК ОШИБОК ДОПУЩЕННЫХ МНОЙ: 1) НАПИСАЛ ! = , ВМЕСТО !=  2) range() - всегда со скобками, по всей видимости функция"""

""" Полное решение. Из интересного : str - преобразует число в строку, остальное  - база """

def pack(s, cnt):
    if(cnt>1):
        return s + str(cnt)
    else:
        return s 
        
s = input()
last = s[0]
last_index = 0 
ans=[]
for i in range(len(s)):
    if s[i] != last:
        ans.append(pack(last, i - last_index))
        last = s[i]
        last_index = i 

ans.append(pack(last, len(s) - last_index))

print(''.join(ans))

  

"""ДОМАШНЯЯ РАБОТА"""

numbers = list(map(int, input().split())) 
выполняет следующие шаги:

input() считывает строку ввода (например, "1 2 3 4 5").

split() разделяет строку на список строк (например, ["1", "2", "3", "4", "5"]).

map(int, ...) применяет функцию int к каждому элементу списка, преобразуя строки в целые числа.

list() преобразует объект map в список чисел (например, [1, 2, 3, 4, 5]).

Результат сохраняется в переменной numbers.

Префикс функции
Для каждой позиции подсчитываем сколько символов совпадает с началом строки !
Пример 
Последовательность :                1 2 1 3 1 2 1 4 1 2 1 3 1 2 1
  Префикс последовательности :      0 0 1 0 3 0 1 0 7 0 1 0 3 0 1

